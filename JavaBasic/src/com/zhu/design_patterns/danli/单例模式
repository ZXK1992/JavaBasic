单例(单个实例)
1.所谓类的单例设计模式,就是采取一定的方法保证在整个的软件系统中，
对某个类只能存在一个对象实例，并且该类只提供一个取得其对象实例的
方法
2.单例模式有两种方式：1)饿汉式 2）懒汉式
    1.饿汉式
    //1. 将构造器私有化
    //2. 在类的内部直接创建对象(该对象是 static)
    //3. 提供一个公共的 static 方法，返回 该单例 对象

    2.懒汉式
    //1.仍然構造器私有化
    //2.定義一個 static 靜態屬性對象
    //3.提供一個 public 的 static 方法，可以返回一個 单例 對象
    //4.懶漢式，只有當用戶使用 getInstance 時，才返回 单例 對象, 後面再次調用時，會返回上次創建的 单例 對象
    // 從而保證了單例

3. 饿汉式与懒汉式区别
        1.二者最主要区别在于创建对象的时机不同：饿汉式是在类加载
        就创建了对象实例，而懒汉式是在使用时才创建
        2.饿汉式不存在线程安全问题，懒汉式存在线程安全问题
        3.饿汉式存在浪费资源的可能。因为如果程序员是一个对象实例都没有使用，那么饿汉式创建的
        对象就浪费了，懒汉式是使用时才创建，就不存在这个问题
        4.在javaSE标准类中，java.lang.Runtime就是经典的单例模式。

