1.代码块基本介绍
    代码块又称为初始化块，属于类中的成员[即 是类的一部分],类似于
    方法，将逻辑语句封装在方法体中,通过{}包起来。
    但和方法不同，没有方法名，没有返回，没有参数，只有方法体，而且
    不用通过对象或类显式调用，而是加载类时，或创建对象时隐式调用。

2.代码块好处
    1.相当于另外一种形式的构造器（对构造器的补充机制），可以做初始化操作
    2.场景：如果多个构造器中都有重复的语句，可以抽取到初始化块中，提高代码
      的重用性

3.代码块使用注意事项和细节
    1.static代码块也叫静态代码块，作用就是对类进行初始化，而且它
      随着类的加载而执行，并且只会执行一次，如果是普通代码块，每创建
      对象，就执行
    2.类什么时候被加载
        1）创建对象实例时(new)
        2)创建子类对象实例，父类也会被加载
        3）使用类的静态成员时(静态属性，静态方法)
    3.普通代码块，在创建对象实例时，会被隐式的调用。
      被创建一次，就会调用一次
      如果只是使用类的静态成员时，普通代码块并不会执行。
      小结：
        1.static代码块是类加载时，执行，只会执行一次
        2.普通代码块是在创建对象时调用的，创建一次，调用一次
        3.类加载的3种情况，需要记住

    4.创建一个对象时，在一个类调用顺序123：
        1.调用静态代码块和静态属性初始化(注意：静态代码块和静态属性
        初始化调用的优先级一样，如果有多个静态代码块和多个静态变量初始化
        ，则按他们定义的顺序调用)
        2.调用普通代码块和普通属性的初始化(注意：普通代码块和普通属性初
        始化调用的优先级一样，如果有多个普通代码块和多个普通属性初始化，
        则按定义顺序调用)
        3.调用构造方法

    5.构造器的最前面其实隐含了super()和调用普通代码块
      静态相关的代码块，属性初始化，在类加载时，就执行完毕
      因此是优先于构造器和普通代码块执行的
    6.我们看一下创建一个子类对象时(继承关系),他们的静态代码块，静态属性
      初始化，普通代码块，普通属性初始化，构造方法的调用顺序如下：
        1.父类的静态代码块和静态属性(优先级一样，按定义顺序执行)
        2.子类的静态代码块和静态属性(优先级一样，按定义顺序执行)
        3.父类的普通代码块和普通属性初始化(优先级一样，按定义顺序执行)
        4.父类的构造方法
        5.子类的普通代码块和普通属性初始化(优先级一样，按定义顺序执行)
        6.子类的构造方法

    7.静态代码块只能直接调用静态成员(静态属性和静态方法),普通代码块
      可以调用任意成员。
