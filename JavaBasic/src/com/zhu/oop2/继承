1.继承的介绍
     继承可以解决代码复用，让我们的编程更加靠近人类思维。
     当多个类存在相同的属性（变量）和方法时可以从这些类中
     抽象出父类,在父类中定义这些相同的属性和方法，所有的子
     类不需要重新定义这些属性和方法，只需要通过 extends 来
     声明继承父类即可。

2.继承给编程带来的便利
    1）代码的复用性提高了
    2）代码的扩展性和维护性提高了

3.继承的深入讨论/细节问题
1）子类继承了所有的属性和方法，非私有的属性和方法可以在子类直接
访问，但是私有属性和方法不能在子类直接访问，要通过父类提供公共的
方法去访问。
2)子类必须调用父类的构造器，完成父类的初始化
3）当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用
父类的无参构造器，如果父类没有提供无参构造器，则必须在子类的构造器中
用super去指定使用父类的哪个构造器完成对父类的初始化工作，否则，编译
不会通过。
4）如果希望指定去调用父类的某个构造器，则显式调用一下super（参数列表）
5）super在使用时，必须放在构造器第一行（super只能在构造器中使用）
6）super（）和this（）都只能放在构造器第一行，因此这两个方法不能共存在
一个构造器
7）Java所有类都是Object的子类，Object是所有类的基类
8）父类构造器的调用不限于直接父类！将一直往上追溯直到Object类（顶级父类）
9）子类最多只能继承一个父类（指直接继承），即Java中是单继承机制
思考：如何让 A 类继承 B 类和 C 类？ 【A 继承 B， B 继承 C】
10）不能滥用继承，子类之间必须满足is-a的逻辑关系