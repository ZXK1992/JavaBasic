1.equals方法
    ==和equals的对比
    ==是一个比较运算符
    1.==：既可以判断基本类型，又可以判断引用类型
    2.==：如果判断基本类型，判断的是值是否相等
    3.==：如果判断引用类型，判断的是地址是否相等，即判定是不是同一对象
    4.equals：是Object类中的方法，只能判断引用类型
    5.默认判断的是地址是否相等，子类中往往重写该方法，用于判断内容是否相等。
      比如Integer，String
2.hashCode方法
    返回该对象的哈希码值，支持此方法是为了提高哈希表(如Hashtable提供的哈希表)的性能。
    实际上，由Object类定义的hashCode方法确实会针对不同的对象返回不同的整数。(这一般
    是通过将该对象的内部地址转换成一个整数来实现的，但是Java编程语言不需要这种实现技巧)
    小结：
        1）提高具有哈希结构的容器的效率
        2）两个引用，如果指向的是同一个对象，则哈希值肯定一样
        3）两个引用，如果指向的是不同对象，则哈希值是不一样的
        4）哈希值主要根据地址号来的，不能完全将哈希值等价于地址
3.toString 方法
    1) 基本介绍
       默认返回：全类名+@+哈希值的十六进制，
       子类往往重写 toString 方法，用于返回对象的属性信息
    2) 重写 toString 方法，打印对象或拼接对象时，都会自动调用该对象的 toString 形式.
    3) 当直接输出一个对象时，toString 方法会被默认的调用
4.finalize 方法
    1) 当对象被回收时，系统自动调用该对象的 finalize 方法。子类可以重写该方法，做一些释放资源的操作【演示】
    2) 什么时候被回收：当某个对象没有任何引用时，则 jvm 就认为这个对象是一个垃圾对象，就会使用垃圾回收机制来
       销毁该对象，在销毁该对象前，会先调用 finalize 方法。
    3) 垃圾回收机制的调用，是由系统来决定(即有自己的 GC 算法), 也可以通过 System.gc() 主动触发垃圾回收机制，


